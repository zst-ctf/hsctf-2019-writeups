#!/usr/bin/env python3
import gmpy2

# Include N, e, c
n = 561985565696052620466091856149686893774419565625295691069663316673425409620917583731032457879432617979438142137
e = 65537
c = 328055279212128616898203809983039708787490384650725890748576927208883055381430000756624369636820903704775835777

# Factorised using YAFU
p = 29
q = 19378812610208711050554891591368513578428260883630885898953907471497427917962675301070084754463193723428901453
assert (p*q) == n

# Compute phi
phi = (p-1) * (q-1)

# Compute modular inverse of e
d = gmpy2.invert(e, phi)

# Decrypt ciphertext
pt = pow(c, d, n)
try:
    pt = bytes.fromhex(hex(pt)[2:])
except:
    pt = bytes.fromhex('0' + hex(pt)[2:])

print(pt)
